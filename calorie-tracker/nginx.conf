# Nginx configuration for serving frontend static files

user  www-data;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    
    # Enable gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml application/manifest+json;

    server {
        listen 8080;
        server_name localhost;

        # Root directory for frontend files
        root /app/frontend;
        index index.html;

        # Proxy all backend requests (MUST come before regex locations)
        location ~ ^/(auth|users|me|uploads|api)/ {
            # Use the container's internal network to reach the backend
            proxy_pass http://localhost:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add CORS headers to allow requests from any origin
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            
            # Handle OPTIONS requests for CORS preflight
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # Serve static files
        location / {
            try_files $uri $uri/ /index.html;
        }

        # PWA Manifest - short cache, must revalidate
        location ~* \.webmanifest$ {
            add_header Cache-Control "public, max-age=3600, must-revalidate";
            add_header Content-Type "application/manifest+json";
            try_files $uri =404;
        }

        # SVG files - served with proper MIME type and caching
        location ~* \.svg$ {
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header Content-Type "image/svg+xml";
            try_files $uri =404;
        }

        # Static assets (excluding uploads) - long cache with immutable flag
        location ~* ^/(?!uploads/).*\.(ico|png|jpg|jpeg|gif|webp|woff|woff2|ttf|eot)$ {
            add_header Cache-Control "public, max-age=31536000, immutable";
            try_files $uri =404;
        }

        # CSS and JS - cache but allow revalidation
        location ~* \.(css|js)$ {
            add_header Cache-Control "public, max-age=86400, must-revalidate";
            try_files $uri =404;
        }

        # Security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://static.cloudflareinsights.com; img-src 'self' data: *; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; font-src 'self'; connect-src 'self' * https://cdn.jsdelivr.net https://static.cloudflareinsights.com";

        # Error handling
        error_page 404 /index.html;
        error_page 500 502 503 504 /index.html;
    }
}